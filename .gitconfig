[user]
	name = PiStash
	email = pi@pilip.net
[color]
	ui = true
[alias]
    st = status -sb
    c  = commit
    cm = commit -m
    cp = cherry-pick
    br = branch
    co = checkout
    d  = diff
    dp = diff -p
    ds = diff --staged
    rh = reset HEAD
    lg = log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%ad) %C(bold blue)<%an>%Creset' --abbrev-commit --date=relative
    lo = "log --pretty=\"%h %an %ar %s\""
    ls = log --pretty=format:'%C(yellow)%h%Creset -%C(red)%d%Creset %s %Cgreen(%ad) %C(bold blue)<%an>%Creset' --abbrev-commit --date=relative
    ll = log --pretty=format:'%C(yellow)%h%Creset -%C(red)%d%Creset %s %Cgreen(%ad) %C(bold blue)<%an>%Creset' --abbrev-commit --numstat
    lnc = log --pretty=format:"%h\\ %s\\ [%cn]"
    lds = log --pretty=format:"%C(yellow)%h\\ %ad%Cred%d\\ %Creset%s%Cblue\\ [%cn]" --decorate --date=short
    ld = log --pretty=format:"%C(yellow)%h\\ %ad%Cred%d\\ %Creset%s%Cblue\\ [%cn]" --decorate --date=relative
    la = "!git config -l | grep alias | cut -c 7-"
    filelog = log -u
    fl = log -u
    dl = "!git ll -1"
    dlc = diff --cached HEAD^
    dr  = "!f() { git diff "$1"^.."$1"; }; f"
    lc  = "!f() { git ll "$1"^.."$1"; }; f"
    diffr  = "!f() { git diff "$1"^.."$1"; }; f"
    amend = commit --amend
    ap = add -p
	re = rebase
    pod = push origin develop
    sl = stash list
    sa = stash apply
    ss = stash save
    ours = "!f() { git co --ours $@ && git add $@; }; f"
    theirs = "!f() { git co --theirs $@ && git add $@; }; f"
    assume = update-index --assume-unchanged
    unassume = update-index --no-assume-unchanged
    assumed = "!git ls-files -v | grep ^h | cut -c 3-"
    unassumeall = "!git assumed | xargs git update-index --no-assume-unchanged"
    assumeall = "!git st -s | awk {'print $2'} | xargs git assume"
	up = !git fetch && git rebase --autostash FETCH_HEAD
[core]
    editor = vi
    sharedRepository = umask
    autocrlf = input
    tab-in-indent = true
    filemode = false
[push]
    default = current
[branch]
    autosetuprebase = always
[merge]
    conflictStyle = diff3
[mergetool]
    keepBackup = false
    keepTemporaries = false
    prompt = false
[git-up "rebase"]
	log-hook = "echo \"changes on $1:\"; git ls $1..$2"
[gitflow "hotfix"]
	notag = true
