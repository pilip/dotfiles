#!/usr/bin/env sh

# Prompt perso, modification de la variable $PS1
# USER@MACHINE:DOSSIER (nb fichiers Taille Mb) [HH:mm:ss] #N°Commande
# (nb jobs)-(screen num) :-)
function truncate_pwd # Fonction pour remplacer PWD par {...} si > 1/3 de l'écran
{
  newPWD="${PWD/#$HOME/~}"
  local pwdmaxlen=$((${COLUMNS:-20}/3))
  if [ ${#newPWD} -gt $pwdmaxlen ]
  then
     newPWD=" {...} ${newPWD: -$pwdmaxlen}"
  fi
  #nbFiles=$(ls -1 | wc -l | sed 's: ::g')
  #sizeFiles=$(ls -lah | grep -m 1 total | sed 's/total //')
}

PROMPT_COMMAND="${PROMPT_COMMAND:+$PROMPT_COMMAND ;} truncate_pwd" # Executé avant chaque commande

function _update_ps1() {
   export PS1="$(~/.powerline-shell/powerline-shell.py --mode flat $?)"
}

export PROMPT_COMMAND="_update_ps1"

# Prompt Colors {{{
C_GREEN="\[\033[01;32m\]"
C_BLUE="\[\033[01;34m\]"
C_YELLOW="\[\033[0;33m\]"
C_NONE="\[\033[00m\]"
# }}}


# Prompt Customization
function parse_git_branch {
    test "${HOME}" != "${PWD}" || return
    ref=$(git symbolic-ref HEAD 2> /dev/null) || return
    echo -e "("${ref#refs/heads/}")"
}

export PS1="$C_GREEN\u@\h $C_BLUE\W $C_YELLOW\$(parse_git_branch)$C_BLUE \$ $C_NONE"

function prompt_session_type {
  ([ -n "$SSH_CLIENT" ] || [ -n "$SSH_TTY" ]) && SESSION_TYPE=remote/ssh;
  ([ -f /proc/1/cgroup ] && grep ':\/system.slice\/docker-[a-z0-9]*\.scope' /proc/1/cgroup > /dev/null  ) && SESSION_TYPE=remote/docker;
  echo -e $SESSION_TYPE
}

# vim:foldmethod=marker:foldlevel=0
